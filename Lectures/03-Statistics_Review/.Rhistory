trt = sample(x = c(T, F), size = xd*yd, replace = T, prob = c(0.51, 0.49))
) %>%
arrange(-y, x) %>%
mutate(id = 1:(xd*yd) %>% str_pad(2, "left", "0")) %>%
arrange(y, x)
ggplot(data = med_df, aes(x, y)) +
geom_tile(color = "grey40", fill = "grey93", size = 0.2) +
geom_text(aes(label = id), color = "grey45", size = 5, family = "Roboto Mono") +
theme_void() +
coord_equal()
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
library(emojifont)
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 1), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 2), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
library(emojifont)
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 1), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
library(emojifont)
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 1), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
View(med_df)
library(emojifont)
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 1), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 2), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
xd <- 9
yd <- 6
set.seed(123)
med_df <- expand.grid(x = 1:xd, y = 1:yd) %>%
mutate(
q = x + y + 1.25 * rnorm(xd*yd),
trt = sample(x = c(T, F), size = xd*yd, replace = T, prob = c(0.51, 0.49))
) %>%
arrange(-y, x) %>%
mutate(id = 1:(xd*yd) %>% str_pad(2, "left", "0")) %>%
arrange(y, x)
ggplot(data = med_df, aes(x, y)) +
geom_tile(color = "grey40", fill = "grey93", size = 0.2) +
geom_text(aes(label = id), color = "grey45", size = 5, family = "Roboto Mono") +
theme_void() +
coord_equal()
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 2), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 3), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 4), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 5), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
library(emojifont)
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 1), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
library(emojifont)
set.seed(246)
ggplot(data = med_df,
aes(x = x, y= y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 1), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
set.seed(246)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
# geom_text(aes(label = trt)) +
geom_emoji(data = sample_n(med_df, 8), emoji = "1f48a") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
med_df <- expand.grid(x = 1:xd, y = 1:yd) %>%
mutate(
q = x + y + 1.25 * rnorm(xd*yd),
trt = sample(x = c(T, F), size = xd*yd, replace = T, prob = c(0.51, 0.49))
) %>%
arrange(-y, x) %>%
mutate(id = 1:(xd*yd) %>% str_pad(2, "left", "0")) %>%
arrange(y, x)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
med_df <- expand.grid(x = 1:xd, y = 1:yd) %>%
mutate(
q = x + y + 1.25 * rnorm(xd*yd),
trt = sample(x = c(T, F), size = xd*yd, replace = T, prob = c(0.51, 0.49))
) %>%
arrange(-y, x) %>%
mutate(id = 1:(xd*yd) %>% str_pad(2, "left", "0")) %>%
arrange(y, x)
ggplot(data = med_df,
aes(x, y)
) +
geom_tile(aes(fill = q), color = "white", size = 0.2) +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
theme(legend.position = "none") +
coord_equal()
xd <- 9
yd <- 6
set.seed(123)
med_df <- expand.grid(x = 1:xd, y = 1:yd) %>%
mutate(
q = x + y + 1.25 * rnorm(xd*yd),
trt = sample(x = c(T, F), size = xd*yd, replace = T, prob = c(0.51, 0.49))
) %>%
arrange(-y, x) %>%
mutate(id = 1:(xd*yd) %>% str_pad(2, "left", "0")) %>%
arrange(y, x)
ggplot(data = med_df, aes(x, y)) +
geom_tile(color = "grey40", fill = "grey93", size = 0.2) +
geom_text(aes(label = id), color = "grey45", size = 5, family = "Roboto Mono") +
theme_void() +
coord_equal()
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(ggthemes, viridis, knitr, extrafont, tidyverse, magrittr, latex2exp, parallel, Ecdat, wooldridge, dslabs, ggforce)
# Define colors
red_pink <- "#e64173"
met_slate <- "#23373b" # metropolis font color
# Notes directory
dir_slides <- "~/GitHub/Intro_Econometrics_F19/Lectures/03-Statistics_Review/"
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
#dpi = 300,
#cache = T,
warning = F,
message = F
)
theme_simple <- theme_bw() + theme(
axis.line = element_line(color = met_slate),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
text = element_text(family = "Fira Sans", color = met_slate, size = 14),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.ticks = element_blank(),
plot.title = element_blank(),
legend.position = "none"
)
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
workers <- read_csv("03-example_data.csv")
workers
workers <- workers %>%
spread(key = variable, value = value)
workers
workers <- workers %>%
mutate(union = ifelse(union == 1, "Yes", "No"))
workers
workers %>%
ggplot(aes(x = educ, y = earnings)) +
geom_point()
View(workers)
workers <- read_csv("03-example_data.csv")
View(workers)
library(pacman)
library(pacman)
p_load(tidyverse, wooldridge)
# load data from the 'wooldridge' package
data <- get('wagepan')
View(data)
# create untidy data
data <- data %>%
mutate(wage = exp(lwage),
earnings = hours*wage,
worker_id = nr) %>%
select(worker_id, year, educ, exper, earnings, union, black) %>%
gather(`educ`, `exper`, `earnings`, `union`, `black`, key = "variable", value = "value")
View(data)
write_csv(data, "03-example_data.csv")
workers
workers
workers <- workers %>%
mutate(union = ifelse(union == 1, "Yes", "No"))
View(workers)
workers <- read_csv("03-example_data.csv")
workers
workers <- workers %>%
spread(key = variable, value = value)
workers
workers <- read_csv("03-example_data.csv")
View(workers)
library(pacman)
p_load(tidyverse, wooldridge)
# load data from the 'wooldridge' package
data <- get('wagepan')
# create untidy data
data <- data %>%
mutate(wage = exp(lwage),
earnings = hours*wage,
worker_id = nr) %>%
select(worker_id, year, educ, exper, earnings, union, black) %>%
gather(`educ`, `exper`, `earnings`, `union`, `black`, key = "variable", value = "value")
write_csv(data, "03-example_data.csv")
View(workers)
library(pacman)
p_load(tidyverse, wooldridge)
# load data from the 'wooldridge' package
data <- get('wagepan')
summary(data$earnings)
library(pacman)
p_load(tidyverse, wooldridge)
# load data from the 'wooldridge' package
data <- get('wagepan')
View(data)
summary(data$lwage)
data <- data %>%
mutate(wage = exp(lwage),
earnings = hours*wage,
worker_id = nr) %>%
select(worker_id, year, educ, exper, earnings, union, black) %>%
gather(`educ`, `exper`, `earnings`, `union`, `black`, key = "variable", value = "value")
summary(data$earnings)
summary(data$wage)
library(pacman)
p_load(tidyverse, wooldridge)
# load data from the 'wooldridge' package
data <- get('wagepan')
data <- data %>%
mutate(wage = exp(lwage),
earnings = hours*wage,
worker_id = nr) %>%
select(worker_id, year, educ, exper, earnings, union, black)
summary(data$earnigns)
summary(data$earnings)
data1 <- data %>% gather(`educ`, `exper`, `earnings`, `union`, `black`, key = "variable", value = "value")
View(data1)
write_csv(data, "03-example_data.csv")
write_csv(data1, "03-example_data.csv")
workers <- read_csv("03-example_data.csv")
workers
workers <- workers %>%
spread(key = variable, value = value)
workers <- workers %>%
spread(key = variable, value = value)
workers
View(workers)
workers
workers <- read_csv("03-example_data.csv")
View(workers)
write_csv(data1, "03-example_data.csv")
workers <- read_csv("03-example_data.csv")
#workers <- read_csv("03-example_data.csv")
workers <- data1
View(data1)
#workers <- read_csv("03-example_data.csv")
workers <- data1
workers
workers <- workers %>%
spread(key = variable, value = value)
workers
workers <- workers %>%
mutate(union = ifelse(union == 1, "Yes", "No"))
workers
workers %>%
ggplot(aes(x = educ, y = earnings)) +
geom_point()
cor(workers$educ, workers$earnings)
workers %>%
ggplot(aes(x = educ, y = earnings, color = union)) +
geom_point()
workers %>%
ggplot(aes(x = educ, y = earnings, color = union)) +
geom_point() +
facet_grid(~union)
workers_union <- workers %>%
filter(union == "Yes") #<<
cor(workers_union$educ, workers_union$earnings)
workers_nounion <- workers %>%
filter(union == "No") #<<
cor(workers_nounion$educ, workers_nounion$earnings)
library(pacman)
p_load(tidyverse, wooldridge)
# load data from the 'wooldridge' package
data <- get('wagepan')
# create untidy data
data <- data %>%
mutate(wage = exp(lwage),
earnings = hours*wage,
worker_id = nr) %>%
select(worker_id, year, educ, exper, earnings, union, black)
data1 <- data %>% gather(`educ`, `exper`, `earnings`, `union`, `black`, key = "variable", value = "value")
#workers <- read_csv("03-example_data.csv")
workers <- data1
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(ggthemes, viridis, knitr, extrafont, tidyverse, magrittr, latex2exp, parallel, Ecdat, wooldridge, dslabs, ggforce)
# Define colors
red_pink <- "#e64173"
met_slate <- "#23373b" # metropolis font color
# Notes directory
dir_slides <- "~/GitHub/Intro_Econometrics_F19/Lectures/03-Statistics_Review/"
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
#dpi = 300,
#cache = T,
warning = F,
message = F
)
theme_simple <- theme_bw() + theme(
axis.line = element_line(color = met_slate),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
text = element_text(family = "Fira Sans", color = met_slate, size = 14),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.ticks = element_blank(),
plot.title = element_blank(),
legend.position = "none"
)
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
ggplot() +
geom_polygon(data = filter(ring5, abs(x) > abs(ring4$x) & abs(y) > abs(ring4$y)), aes(x, y), color = met_slate, fill = "white", alpha = 1, size = 1) +
geom_polygon(data = filter(ring4, abs(x) > abs(ring3$x) & abs(y) > abs(ring3$y)), aes(x, y), color = "grey55", fill = "grey55", alpha = 1, size = 0) +
geom_polygon(data = filter(ring3, abs(x) > abs(ring2$x) & abs(y) > abs(ring2$y)), aes(x, y), color = "#07506F", fill = "#07506F", alpha = 1, size = 0) +
geom_polygon(data = filter(ring2, abs(x) > abs(ring1$x) & abs(y) > abs(ring1$y)), aes(x, y), color = "#b92e34", fill = "#b92e34", alpha = 1, size = 0) +
geom_polygon(data = ring1, aes(x, y), color = "#D7AA27", fill = "#D7AA27", alpha = 1, size = 0) +
geom_point(data = arrows_u_lv, aes(x, y), shape = 4, size = 10) +
geom_point(data = arrows_u_lv, aes(x, y), size = 4) +
theme_empty_arrows
# Set population and sample sizes
n_p <- 100
n_s <- 10
# Set the seed
set.seed(12468)
# Generate data
pop_df <- tibble(
i = 3,
x = rnorm(n_p, mean = 2, sd = 20),
row = rep(1:sqrt(n_p), times = sqrt(n_p)),
col = rep(1:sqrt(n_p), each = sqrt(n_p)),
s1 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s2 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s3 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s)))
)
# Means
m0 <- mean(pop_df$x)
m1 <- mean(subset(pop_df$x, pop_df$s1 == T))
m2 <- mean(subset(pop_df$x, pop_df$s2 == T))
m3 <- mean(subset(pop_df$x, pop_df$s3 == T))
# Simulation
set.seed(12468)
sim_df <- mclapply(mc.cores = 1, X = 1:1e4, FUN = function(x, size = n_s) {
pop_df %>%
sample_n(size = size) %>%
summarize(mu_hat = mean(x))
}) %>% do.call(rbind, .) %>% as_tibble()
ggplot(data = pop_df, aes(x = row, y = col)) +
geom_point(color = "darkslategray", size = 10) +
theme_empty
ggplot() +
geom_histogram(data = pop_df, aes(x), fill = "darkslategray", alpha = 0.50) +
geom_vline(xintercept = m0, size = 2, color = "darkslategray") +
theme_empty
ggplot(data = pop_df, aes(x = row, y = col, shape = s1)) +
geom_point(color = "darkslategray", size = 10) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
