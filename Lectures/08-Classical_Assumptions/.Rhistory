options(htmltools.dir.version = FALSE)
library(pacman)
p_load(ggthemes, viridis, knitr, extrafont, tidyverse, magrittr, wooldridge, stargazer, latex2exp, parallel, broom, ggforce)
# Define colors
red_pink <- "#e64173"
turquoise <- "#20B2AA"
orange <- "#FFA500"
red <- "#fb6107"
blue <- "#2b59c3"
green <- "#8bb174"
grey_light <- "grey70"
grey_mid <- "grey50"
grey_dark <- "grey20"
purple <- "#6A5ACD"
met_slate <- "#23373b" # metropolis font color
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
#dpi = 300,
#cache = T,
warning = F,
message = F
)
theme_simple <- theme_bw() + theme(
axis.line = element_line(color = met_slate),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
text = element_text(family = "Fira Sans", color = met_slate, size = 14),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.ticks = element_blank(),
plot.title = element_blank(),
legend.position = "none"
)
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
# Neumark data
data <- get(data(wage2))
lm_e <- lm(lwage ~ educ, data = data)
b0 <- lm_e$coefficients[1]
b1 <- lm_e$coefficients[2]
r_2 <- summary(lm(lwage ~ educ, data = data))$r.squared
data %>%
ggplot() +
geom_point(aes(x = educ, y = lwage), color = "darkslategray") +
geom_abline(intercept = b0, slope = b1, color = "#9370DB", size = 1) +
theme_simple + xlab("Years of Education") + ylab("log(Monthly Earnings)")
data %>%
ggplot() +
geom_point(aes(x = educ, y = lwage), color = "darkslategray") +
geom_abline(intercept = b0, slope = b1, color = "#9370DB", size = 1) +
theme_simple + xlab("Years of Education") + ylab("log(Monthly Earnings)")
data %>%
ggplot() +
geom_point(aes(x = educ, y = lwage), color = "darkslategray") +
geom_abline(intercept = b0, slope = b1, color = "#9370DB", size = 1) +
theme_simple + xlab("Years of Education") + ylab("log(Monthly Earnings)")
data %>%
ggplot() +
geom_point(aes(x = educ, y = lwage), color = "darkslategray") +
geom_abline(intercept = b0, slope = b1, color = "#9370DB", size = 1) +
theme_simple + xlab("Years of Education") + ylab("log(Monthly Earnings)")
data %>%
ggplot() +
geom_point(aes(x = educ, y = lwage), color = "darkslategray") +
geom_abline(intercept = b0, slope = b1, color = "#9370DB", size = 1) +
theme_simple + xlab("Years of Education") + ylab("log(Monthly Earnings)")
y_hat <- function(x, b0, b1) {b0 + b1 * x}
data %>%
ggplot(aes(x = educ, y = lwage)) +
geom_point(color = "darkslategray", alpha = 0) +
geom_segment(aes(x = 11, xend = 11, y = 7.75, yend = y_hat(11, b0, b1), color = (7.75 - y_hat(11, b0, b1))^2), linetype = "solid", color = red_pink, size = 0.5) +
geom_point(aes(x = 11, y = 7.75), color = "#708090", size = 3) +
geom_abline(intercept = b0, slope = b1, color = "#9370DB", size = 1) +
theme_simple + xlab("Years of Education") + ylab("log(Monthly Earnings)")
y_hat <- function(x, b0, b1) {b0 + b1 * x}
data %>%
ggplot(aes(x = educ, y = lwage)) +
geom_point(color = "darkslategray", alpha = 0.1) +
geom_segment(aes(x = 11, xend = 11, y = 7.75, yend = y_hat(11, b0, b1), color = (7.75 - y_hat(11, b0, b1))^2), linetype = "solid", color = red_pink, size = 0.5) +
geom_point(aes(x = 11, y = 7.75), color = "#708090", size = 3) +
geom_abline(intercept = b0, slope = b1, color = "#9370DB", size = 1) +
theme_simple + xlab("Years of Education") + ylab("log(Monthly Earnings)")
y_hat <- function(x, b0, b1) {b0 + b1 * x}
B0 <- b0 + 0.5
B1 <- b1 - 0.035
data %>%
ggplot(aes(x = educ, y = lwage)) +
geom_point(color = "darkslategray", alpha = 0) +
geom_segment(aes(x = 11, xend = 11, y = 7.75, yend = y_hat(11, B0, B1), color = (7.75 - y_hat(11, B0, B1))^2), linetype = "solid", color = "#FD5F00", size = 0.5) +
geom_point(aes(x = 11, y = 7.75), color = "#708090", size = 3) +
geom_abline(intercept = b0, slope = b1, color = "#9370DB", size = 1) +
geom_abline(intercept = B0, slope = B1, color = "#007935", size = 1, linetype = "solid") +
theme_simple + xlab("Years of Education") + ylab("log(Monthly Earnings)")
tmp <- tibble(x = seq(-4, 4, 0.01), y = dnorm(x))
tmp <- rbind(tmp, tibble(x = seq(4, -4, -0.01), y = 0))
ggplot(data = tmp, aes(x, y)) +
geom_polygon(fill = red_pink, alpha = 0.9) +
geom_hline(yintercept = 0, color = "black") +
geom_vline(xintercept = 0, size = 1, linetype = "dashed") +
scale_x_continuous(breaks = 0, labels = TeX("$\\beta$")) +
theme_simple +
theme(axis.text.x = element_text(size = 40),
axis.text.y = element_blank(),
axis.title = element_blank(),
line = element_blank())
tmp <- tibble(x = seq(-4, 4, 0.01), y = dnorm(x))
tmp <- rbind(tmp, tibble(x = seq(4, -4, -0.01), y = 0))
ggplot(data = tmp, aes(x, y)) +
geom_polygon(aes(x = x + 2), fill = "darkslategray", alpha = 0.9) +
geom_hline(yintercept = 0, color = "black") +
geom_vline(xintercept = 0, size = 1, linetype = "dashed") +
scale_x_continuous(breaks = 0, labels = TeX("$\\beta$")) +
theme_simple +
theme(axis.text.x = element_text(size = 40),
axis.text.y = element_blank(),
axis.title = element_blank(),
line = element_blank())
data %>%
ggplot() +
xlim(9, 18) + ylim(4.5, 8.1) +
geom_point(aes(x = educ, y = lwage), color = "darkslategray") +
theme_simple + xlab("Years of Education") + ylab("log(Monthly Earnings)")
data %>%
filter(educ == 13) %>%
ggplot() +
xlim(9, 18) + ylim(4.5, 8.1) +
geom_point(aes(x = educ, y = lwage), color = "darkslategray") +
theme_simple + xlab("Years of Education") + ylab("log(Monthly Earnings)")
# Setup ----------------------------------------------------------------------------------
# Options
options(stringsAsFactors = F)
# Packages
library(pacman)
p_load(ggridges)
# Data work ------------------------------------------------------------------------------
# Set seed
set.seed(12345)
# Sample size
n <- 1e5
# Exogenous
e_good <- tibble(
x = runif(n = n, min = 9, max = 18),
e = rnorm(n)
) %>% mutate(x = round(x))
# Endogenous
e_bad <- tibble(
x = runif(n = n, min = 9, max = 18),
e = rnorm(n) + 0.5 * (x - 13.5)) %>% mutate(x = round(x))
# Figures: Joint densities ---------------------------------------------------------------
# The joint plot: good
joint_good <- ggplot(data = e_good, aes(x = e)) +
geom_density() +
theme_pander()
# The joint plot: bad
joint_bad <- ggplot(data = e_bad, aes(x = e)) +
geom_density() +
theme_pander()
# Figures: Conditional densities ---------------------------------------------------------
cond_good <- ggplot(data = e_good, aes(x = e, y = as.factor(x))) +
geom_density_ridges_gradient(
aes(fill = ..x..),
color = "white",
scale = 2.5,
size = 0.2
) +
# geom_vline(xintercept = 0, alpha = 0.3) +
scale_fill_viridis(option = "magma") +
xlab("Unobserved Ability") +
ylab("Years of Education") +
theme_pander(base_family = "Fira Sans", base_size = 18) +
theme(
legend.position = "none",
axis.title.y = element_text(vjust = 0.5, size = 22, color = met_slate),
axis.title.x = element_text(size = 22, color = met_slate)
)
cond_bad <- ggplot(data = e_bad, aes(x = e, y = as.factor(x))) +
geom_density_ridges_gradient(
aes(fill = ..x..),
color = "white",
scale = 2.5,
size = 0.2
) +
# geom_vline(xintercept = 0, alpha = 0.3) +
scale_fill_viridis(option = "magma") +
xlab("Unobserved Ability") +
ylab("Years of Education") +
theme_pander(base_family = "Fira Sans", base_size = 18) +
theme(
legend.position = "none",
axis.title.y = element_text(vjust = 0.5, size = 22, color = met_slate),
axis.title.x = element_text(size = 22, color = met_slate)
)
cond_good
cond_good
cond_bad
set.seed(12345)
ggplot(data = tibble(
x = runif(1e3, -3, 3),
e = rnorm(1e3, 0, sd = 4)
), aes(x = x, y = e)) +
geom_point(color = "darkslategrey", size = 2.75, alpha = 0.5) +
labs(x = "Independent Variable", y = "Error Term") +
theme_simple
set.seed(12345)
ggplot(data = tibble(
x = runif(1e3, -3, 3),
e = rnorm(1e3, 0, sd = 4 + 1.5 * x)
), aes(x = x, y = e)) +
geom_point(color = "darkslategrey", size = 2.75, alpha = 0.5) +
labs(x = "Independent Variable", y = "Error Term") +
theme_simple
set.seed(12345)
ggplot(data = tibble(
x = runif(1e3, -3, 3),
e = rnorm(1e3, 0, sd = 2 + x^2)
), aes(x = x, y = e)) +
geom_point(color = "darkslategrey", size = 2.75, alpha = 0.5) +
labs(x = "Independent Variable", y = "Error Term") +
theme_simple
# Colors (order: x1, x2, x3, y)
venn_colors <- c(purple, red, orange)
# Locations of circles
venn_df <- tibble(
x  = c( 0.0,   -1.5,    1.5),
y  = c( 0.0,   -2.25,   -2.25),
r  = c( 1.9,    1.9,    1.9),
l  = c( "Linear", "Unbiased", "Min. Variance"),
xl = c( 0.0,   -1.5,    1.5),
yl = c( 0.0,   -2.25,   -2.25)
)
# Venn
ggplot(data = venn_df, aes(x0 = x, y0 = y, r = r, fill = l, color = l)) +
geom_circle(alpha = 0.3, size = 0.75) +
theme_void() +
theme(legend.position = "none") +
scale_fill_manual(values = venn_colors) +
scale_color_manual(values = venn_colors) +
geom_text(aes(x = xl, y = yl, label = l), size = 9, family = "Fira Sans", parse = F) +
annotate(
x = -5, y = 2.65,
geom = "text", label = "Universe of Estimators", size = 9, family = "Fira Sans", hjust = 0
) +
xlim(-5.5, 5.5) +
ylim(-4.5, 2.8) +
coord_equal()
# Set population and sample sizes
n_p <- 100
n_s <- 30
# Set the seed
set.seed(12468)
# Generate data
pop_df <- tibble(
i = 3,
x = rnorm(n_p, mean = 5, sd = 1.5),
e = rnorm(n_p, mean = 0, sd = 1),
y = i + 0.5 * x + e,
row = rep(1:sqrt(n_p), times = sqrt(n_p)),
col = rep(1:sqrt(n_p), each = sqrt(n_p)),
s1 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s2 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s3 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s)))
)
# Regressions
lm0 <- lm(y ~ x, data = pop_df)
lm1 <- lm(y ~ x, data = filter(pop_df, s1 == T))
lm2 <- lm(y ~ x, data = filter(pop_df, s2 == T))
lm3 <- lm(y ~ x, data = filter(pop_df, s3 == T))
# Simulation
set.seed(12468)
sim_df <- mclapply(mc.cores = 1, X = 1:1e4, FUN = function(x, size = n_s) {
lm(y ~ x, data = pop_df %>% sample_n(size = size)) %>% tidy()
}) %>% do.call(rbind, .) %>% as_tibble()
ggplot(data = pop_df, aes(x = row, y = col)) +
geom_point(color = "darkslategray", size = 10) +
theme_empty
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_abline(
intercept = lm0$coefficients[1], slope = lm0$coefficients[2],
color = red_pink, size = 3
) +
geom_point(color = "darkslategray", size = 6) +
theme_empty
ggplot(data = pop_df, aes(x = row, y = col, shape = s1)) +
geom_point(color = "darkslategray", size = 10) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_abline(
intercept = lm0$coefficients[1], slope = lm0$coefficients[2],
color = red_pink, size = 3, alpha = 0.3
) +
geom_point(aes(shape = s1), color = "darkslategray", size = 6) +
geom_abline(
intercept = lm1$coefficients[1], slope = lm1$coefficients[2],
size = 2, linetype = 2, color = "black"
) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
ggplot(data = pop_df, aes(x = row, y = col, shape = s2)) +
geom_point(color = "darkslategray", size = 10) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_abline(
intercept = lm0$coefficients[1], slope = lm0$coefficients[2],
color = red_pink, size = 3, alpha = 0.3
) +
geom_point(aes(shape = s2), color = "darkslategray", size = 6) +
geom_abline(
intercept = lm1$coefficients[1], slope = lm1$coefficients[2],
size = 2, linetype = 2, color = "black", alpha = 0.3
) +
geom_abline(
intercept = lm2$coefficients[1], slope = lm2$coefficients[2],
size = 2, linetype = 2, color = "black"
) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
ggplot(data = pop_df, aes(x = row, y = col, shape = s3)) +
geom_point(color = "darkslategray", size = 10) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_abline(
intercept = lm0$coefficients[1], slope = lm0$coefficients[2],
color = red_pink, size = 3, alpha = 0.3
) +
geom_point(aes(shape = s3), color = "darkslategray", size = 6) +
geom_abline(
intercept = lm1$coefficients[1], slope = lm1$coefficients[2],
size = 2, linetype = 2, color = "black", alpha = 0.3
) +
geom_abline(
intercept = lm2$coefficients[1], slope = lm2$coefficients[2],
size = 2, linetype = 2, color = "black", alpha = 0.3
) +
geom_abline(
intercept = lm3$coefficients[1], slope = lm3$coefficients[2],
size = 2, linetype = 2, color = "black"
) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
# Reshape sim_df
line_df <- tibble(
intercept = sim_df %>% filter(term != "x") %>% select(estimate) %>% unlist(),
slope = sim_df %>% filter(term == "x") %>% select(estimate) %>% unlist()
)
ggplot() +
geom_abline(data = line_df, aes(intercept = intercept, slope = slope), alpha = 0.01) +
geom_point(data = pop_df, aes(x = x, y = y), size = 3, color = "darkslategray") +
geom_abline(
intercept = lm0$coefficients[1], slope = lm0$coefficients[2],
color = red_pink, size = 1.5
) +
theme_empty
# Reshape sim_df
line_df <- tibble(
intercept = sim_df %>% filter(term != "x") %>% select(estimate) %>% unlist(),
slope = sim_df %>% filter(term == "x") %>% select(estimate) %>% unlist()
)
ggplot() +
geom_abline(data = line_df, aes(intercept = intercept, slope = slope), alpha = 0.01, size = 1) +
geom_point(data = pop_df, aes(x = x, y = y), size = 6, color = "darkslategray") +
geom_abline(
intercept = lm0$coefficients[1], slope = lm0$coefficients[2],
color = red_pink, size = 3
) +
theme_empty
# Reshape sim_df
line_df <- tibble(
intercept = sim_df %>% filter(term != "x") %>% select(estimate) %>% unlist(),
slope = sim_df %>% filter(term == "x") %>% select(estimate) %>% unlist()
)
ggplot() +
geom_abline(data = line_df, aes(intercept = intercept, slope = slope), alpha = 0.01, size = 1) +
geom_point(data = pop_df, aes(x = x, y = y), size = 6, color = "darkslategray") +
geom_abline(
intercept = lm0$coefficients[1], slope = lm0$coefficients[2],
color = red_pink, size = 3
) +
theme_empty
